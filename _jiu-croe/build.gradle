dependencies {
    compile 'com.zendesk:mysql-binlog-connector-java:0.23.2'
    compile "org.projectlombok:lombok"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "com.baomidou:mybatis-plus-boot-starter"
    compile "com.baomidou:mybatis-plus"
    compile "com.baomidou:mybatis-plus-annotation"
    compile "com.baomidou:mybatis-plus-core"
    compile "cn.hutool:hutool-all"
    compile "io.github.openfeign:feign-okhttp"
    compile "org.springframework.cloud:spring-cloud-starter-openfeign"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-ribbon"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-hystrix"
    compile "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"
    compile "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config"
    compile "cn.afterturn:easypoi-web:4.1.0"
    compile "cn.afterturn:easypoi-annotation"
    compile  "net.oschina.j2cache:j2cache-core"
    compile "io.springfox:springfox-swagger2"
    compile "com.xuxueli:xxl-rpc-core"
    compile "org.quartz-scheduler:quartz"
    compile "org.apache.commons:commons-email"
    compile "org.hibernate.validator:hibernate-validator"
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile  "org.apache.commons:commons-lang3"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "com.google.guava:guava"
    implementation "commons-beanutils:commons-beanutils"
    implementation "org.lionsoul:ip2region"
    implementation "com.github.xiaoymin:knife4j-spring-boot-starter"
    implementation "mysql:mysql-connector-java:8.0.19"
    implementation "com.alibaba:druid-spring-boot-starter:1.1.22"
    implementation "com.alibaba:druid:1.1.22"
    implementation "org.web3j:core:4.5.17"
    implementation 'io.github.qyvlik:io.eblock.eos-eos4j:1.0.1'
    implementation "org.bitcoinj:bitcoinj-core:0.14.3"
    //<!-- seata-all 1.0.0 SeataHystrixConcurrencyStrategy 和 本项目中 ThreadLocalHystrixConcurrencyStrategy 冲突，导致事务回滚失效 -->
    implementation"io.seata:seata-all"
    compile "p6spy:p6spy"
    implementation  "com.plumelog:plumelog-logback"
    implementation  "com.plumelog:plumelog-trace"
    implementation "cn.afterturn:easypoi-base"
    implementation  "io.jsonwebtoken:jjwt-jackson"
    implementation  "io.jsonwebtoken:jjwt-impl"
    implementation  "io.jsonwebtoken:jjwt-api"
    implementation "org.eclipse.jgit:org.eclipse.jgit"
    implementation "org.apache.maven.shared:maven-invoker"
    implementation  "org.springframework:spring-websocket"
    implementation "org.codehaus.groovy:groovy"
    implementation "org.apache.commons:commons-exec"
    implementation "org.springframework.amqp:spring-rabbit"
    implementation  "com.github.dozermapper:dozer-core"
    implementation  "com.github.dozermapper:dozer-spring4"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names"
  //  compile 'com.mxixm:fastboot-weixin:0.6.2' //快速创建微信公众号 https://gitee.com/kingshine/FastBootWeixin?_from=gitee_search
    //https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&t=sandbox/index
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:7.9.2"
    implementation "org.elasticsearch:elasticsearch:7.9.2"
    compile "org.owasp.antisamy:antisamy:1.5.7"

    task writeNewPom << {
        pom {
            project {
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
    // 指定上传的路径
    def localMavenRepo = 'file://' + new File('D:\\lib').absolutePath

// 上传Task，Gradle会生成并上传pom.xml文件。
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: localMavenRepo)

                //构造项目的Pom文件
                pom.project {
                    name = project.name
                    packaging = 'jar'
                    description = 'description'
                }
            }

        }
    }

    configurations {
        all*.exclude module:"slf4j-simple"
        all*.exclude module:"spring-boot-starter-tomcat"
        all*.exclude module:"spring-boot-starter-logging"
        all*.exclude module:"log4j-to-slf4j"
        all*.exclude module:"log4j-api"
    }

}