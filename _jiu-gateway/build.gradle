mainClassName = "com.jiu.GatewayServerApplication"
dependencies {
    compile(project(':_jiu-croe'))
    configurations {
        all*.exclude module: "spring-webmvc"
        all*.exclude module: "slf4j-log4j12"
        all*.exclude module: "log4j"
        all*.exclude module: "slf4j-simple"
        all*.exclude module: "mybatis-plus-boot-starter"
        all*.exclude module: "mybatis-plus"
        all*.exclude module: "mybatis-plus-core"
        all*.exclude module: "mybatis-plus-annotation"
        all*.exclude module: "druid-spring-boot-starter"
        all*.exclude module: "mysql-connector-java"
        all*.exclude module: "p6spy"
        all*.exclude module: "spring-boot-starter-aop"
        all*.exclude module: "spring-boot-configuration-processor"
        all*.exclude module: "spring-boot-starter-undertow"
        all*.exclude module: "easypoi-web"
        all*.exclude module: "easypoi-base"
        all*.exclude module: "xxl-rpc-core"
        all*.exclude module: "elasticsearch"
        all*.exclude module: "elasticsearch-rest-high-level-client"
        all*.exclude module: "elasticsearch-rest-client"
        all*.exclude module: "quartz"
        all*.exclude module: "commons-email"
        all*.exclude module: "bitcoinj-core"

    }
    compile 'org.springframework.cloud:spring-cloud-starter-gateway'
    compile 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'javax.servlet', name: 'javax.servlet-api'


    task writeNewPom << {
        pom {
            project {
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
    

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server

}

//apply plugin: 'com.palantir.docker'
//docker {
//    dockerfile file('script/Dockerfile') //DockerFile路径
//    name "${project.group}/${jar.baseName}:${jar.version}"
//    files jar.archivePath
//    buildArgs(['JAR_FILE': "${jar.archiveName}"])
//}



