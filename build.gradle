//编译构建时的配置
buildscript {
    ext {
        springBootVersion = "2.2.5.RELEASE"
        springBootManagementVersion = "1.0.8.RELEASE"
        springCloudVersion = "Hoxton.SR3"
        springCloudAlibaba ="2.2.1.RELEASE"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {url  "https://plugins.gradle.org/m2/"}
//        maven { url "http://mvnrepository.com/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven{  url 'https://maven.aliyun.com/repository/central' }


//        maven { url "https://repo.spring.io/snapshot" }
//        maven { url "https://repo.spring.io/milestone" }
//        maven { url "https://repo.spring.io/release" }
//        maven { url "https://repo.spring.io/libs-milestone" }

        jcenter()
    }
    //打包
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springBootManagementVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
        classpath 'org.hidetake:gradle-ssh-plugin:2.6.0'
    }

}

allprojects {
    group = "com.jiu" //分组
    version = "1.0" //版本号
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {url  "https://plugins.gradle.org/m2/"}
//        maven { url "http://mvnrepository.com/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven{  url 'https://maven.aliyun.com/repository/central' }
//        maven { url "https://repo.spring.io/snapshot" }
//        maven { url "https://repo.spring.io/milestone" }
//        maven { url "https://repo.spring.io/libs-milestone" }
//        maven { url "https://repo.spring.io/release" }
        jcenter()
    }


}
//统一所有子项目的配置
subprojects {
    apply plugin: 'org.hidetake.ssh'
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "maven"
    apply plugin: 'eclipse'
    //spring boot 插件
    apply plugin: "io.spring.dependency-management"
   // apply plugin: "org.springframework.boot"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    ext {
        gradleDockerVersion = "1.2"
        ehcacheVersion = "2.10.4"
        mysqlConnectorVersion = "8.0.19"
        lombokVersion = "1.16.18"
        mybatisVersion = "3.4.5"
        mybatisStarterVersion = "1.3.0"
        hikariCPVersion = "2.5.1"
        commonMapperVersion = "3.4.4"
        commonsIOVersion = "2.4"
        commonsLangversion = "3.7"
        commonsCodecVersion = "1.11"
        fastJsonVersion = "1.2.62"
        swagger2Version = "2.9.2"
        jacksonVersion= "2.10.3"
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibaba}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }
    jar {
        manifest.attributes provider: "gradle"
    }


    build.doLast {
        def rootPath = rootProject.buildDir.getPath() + "/distributions"
        copy {
            from buildDir.getPath() + "/distributions" into rootPath
        }
    }
    clean.doFirst {
        delete "${buildDir}/../out"
    }


    ssh.settings {
        knownHosts = allowAnyHosts
    }

    remotes {
        deployServer {
            host = 'budongi.club'
            user = 'root'
            password = 'www.5211314.com'
//            identity = file('id_rsa')
        }
    }


    dependencies {
        compile "com.alibaba.nacos:nacos-client:1.3.0"
        //web
        compile("org.springframework.boot:spring-boot-starter-web") {
            //使用undertow来代替tomacat
            exclude module: "spring-boot-starter-tomcat"
            exclude module: "spring-boot-starter-logging"
            exclude module: "log4j-to-slf4j"
            exclude module: "log4j-api"
            exclude module: "logback-classic"
        }


        //替代tomcat
        compile "org.springframework.boot:spring-boot-starter-undertow"
        //configuration
        compile "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
        //缓存
        compile "net.sf.ehcache:ehcache:${ehcacheVersion}"
        //lombok插件
        compile "org.projectlombok:lombok:${lombokVersion}"
        //
        compile "com.lmax:disruptor:3.3.6"
        //热部署
        compile "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        //commons-io
        compile "commons-io:commons-io:${commonsIOVersion}"
        //commons-lang3
        compile "org.apache.commons:commons-lang3:${commonsLangversion}"
        //commons-codec
        compile "commons-codec:commons-codec:${commonsCodecVersion}"
        //fast-json
        compile "com.alibaba:fastjson:${fastJsonVersion}"
        //thymeleft
        implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
        // 关闭thymeleft强校验
        implementation "net.sourceforge.nekohtml:nekohtml:1.9.22"
        //swagger2
        compile "io.springfox:springfox-swagger2:${swagger2Version}"
        //httpclient
        compile "org.apache.httpcomponents:httpclient:4.5.6"
        compile "org.apache.httpcomponents:httpcore:4.4.11"
        //测试
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        //jackson
        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
        compile "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"



    }


}